#include <stdio.h>
#include <stdlib.h>#define BUFFER_SIZE 1024// Simple function to run nmap OS detection and print relevant output
void run_nmap_os_detection(const char *target_ip) {
char command ;
char buffer[BUFFER_SIZE];
FILE *pipe;// Prepare the command to run nmap with OS detection (-O)
// Using sudo for root privileges; adjust as needed
snprintf(command, sizeof(command), "sudo nmap -O %s", target_ip);

// Open pipe to read standard output of nmap command
pipe = popen(command, "r");
if (!pipe) {
    perror("popen failed");
    return;
}

printf("Nmap OS Detection result for target %s:
", target_ip);

// Read output line by line and print OS detection lines only
while (fgets(buffer, sizeof(buffer), pipe)) {
    // Print lines containing OS details
    if (strstr(buffer, "OS details") || strstr(buffer, "OS detection performed") || strstr(buffer, "Running:")) {
        printf("%s", buffer);
    }
}

pclose(pipe);}int main(int argc, char *argv[]) {
if (argc != 2) {
printf("Usage: %s <target_ip>\n", argv );
return 1;
}run_nmap_os_detection(argv[1]);

return 0;}
nmnap
